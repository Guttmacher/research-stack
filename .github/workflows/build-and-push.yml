---
name: Build and Push Containers

"on":
  push:
    branches: [main]
    paths:
      - 'Dockerfile'
      - 'build-container.sh'
      - 'R_packages.txt'
      - 'install_r_packages.sh'
      - 'r-shell-config'
      - 'dotfiles/**'
      - '.github/workflows/build-and-push.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/base-container

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push r-container
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          target: r-container
          push: true
          tags: >-
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:r-${{
            steps.meta.outputs.version }}
          cache-from: >-
            type=registry,ref=${{ env.REGISTRY }}/${{
            env.IMAGE_NAME }}:cache-r
          cache-to: >-
            type=registry,ref=${{ env.REGISTRY }}/${{
            env.IMAGE_NAME }}:cache-r,mode=max

      - name: Build and push full-container
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          target: full-container
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/${{
            env.IMAGE_NAME }}:cache-r
            type=registry,ref=${{ env.REGISTRY }}/${{
            env.IMAGE_NAME }}:cache-full
          cache-to: >-
            type=registry,ref=${{ env.REGISTRY }}/${{
            env.IMAGE_NAME }}:cache-full,mode=max
